{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFecthGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFecthGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEPC,mBAAS,IAFF,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB7C,OACG,sBACGC,SAXe,SAACC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKjB,SAGG,uBACGO,KAAK,OACLC,MAAQT,EACRU,SApBiB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCNhBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,iDAEmCC,UAAWH,GAF9C,+DAGDI,MAAOF,GAHN,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVpB,kBAcbM,GAda,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGtC,OACG,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCJDO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEfd,mBAAS,CAChCqB,KAAM,GACNa,SAAS,IAJ6B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAuBzC,OAhBAC,qBAAW,WAERxB,EAASC,GACLwB,MAAM,SAAAC,GAEJH,EAAS,CACNf,KAAMkB,EACNL,SAAS,SAKlB,CAACpB,IAIGqB,EDrB0BK,CAAc1B,GAAlCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAErB,OACG,qCACG,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEMH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEdlBgB,EAAe,WAAO,IAAD,EAEKzC,mBAAS,CAAC,gBAFf,mBAExB0C,EAFwB,KAEZ3C,EAFY,KAI/B,OACG,qCACG,8CACA,cAAC,EAAD,CACGA,cAAiBA,IAEpB,uBAEA,6BAEM2C,EAAWnB,KAAK,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEGA,SAAWA,GADLA,Y,MCb3B6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2c00784b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n\n   const [ inputValue, setInputValue ] = useState('');\n\n   const handleInputChange = (e) => {\n      setInputValue(e.target.value);\n   }\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n\n      if ( inputValue.trim().length > 2 ) {\n         setCategories( cats => [ inputValue, ...cats] );\n         setInputValue('');\n      }\n   }\n\n   return (\n      <form\n         onSubmit={ handleSubmit }\n      >\n         <input\n            type='text'\n            value={ inputValue }\n            onChange={ handleInputChange }\n         />\n      </form>\n   )\n}\n\nAddCategory.propTypes = {\n   setCategories: PropTypes.func.isRequired\n}\n","\n\nexport const getGifs = async( category ) => {\n\n   const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=6kCzSxGskgwNGvQGroEIQTZG6s8JCh7y`;\n   const resp = await fetch( url );\n   const { data } = await resp.json();\n\n   const gifs = data.map( img => {\n      return {\n         id: img.id,\n         title: img.title,\n         url: img.images?.downsized_medium.url\n      }\n   })\n\n   return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n\n\n   return (\n      <div className=\"card animate__animated animate__fadeIn\">\n         <img src={ url } alt={ title } />\n         <p>{ title }</p>\n      </div>\n   )\n}\n","import React from 'react'\nimport { useFecthGifs } from '../hooks/useFecthGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n   const { data:images, loading } = useFecthGifs( category );\n\n   return (\n      <>\n         <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\n\n         { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n\n         <div className=\"card-grid\">\n            {\n               images.map( img => (\n                  <GifGridItem\n                     key={ img.id }\n                     { ...img }\n                  />\n               ))\n            }\n         </div>\n      </>\n   )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifs'\n\n\nexport const useFecthGifs = ( category ) => {\n\n   const [state, setState] = useState({\n      data: [],\n      loading: true\n   });\n\n   useEffect( () => {\n\n      getGifs( category )\n         .then( imgs => {\n\n            setState({\n               data: imgs,\n               loading: false\n            });\n\n         });\n\n   }, [category]);\n\n\n\n   return state; // { data: [], loading: true };\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n   const [categories, setCategories] = useState(['Dragon Ball']);\n\n   return (\n      <>\n         <h2>GifExpertApp</h2>\n         <AddCategory\n            setCategories ={ setCategories }\n         />\n         <hr />\n\n         <ol>\n            {\n               categories.map( category => (\n                  <GifGrid\n                     key={ category }\n                     category={ category }\n                  />\n               ))\n            }\n         </ol>\n      </>\n   )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}